import { GameManagerEvent, ActionType } from "../../../_types/GlobalTypes";

export const actionEvents = {
  [ActionType.InitPlayer]: {
    started: GameManagerEvent.InitializeStarted,
    proofDone: GameManagerEvent.InitializeProofDone,
    txSubmitted: GameManagerEvent.InitializeTXSubmitted,
    txConfirmed: GameManagerEvent.InitializeTXConfirmed,
    failed: GameManagerEvent.InitializeError,
  },
  [ActionType.MineTile]: {
    scheduled: GameManagerEvent.MineTileScheduled,
    started: GameManagerEvent.MineTileStarted,
    proofDone: GameManagerEvent.MineTileProofDone,
    txSubmitting: GameManagerEvent.MineTileTXSubmitting,
    txSubmitted: GameManagerEvent.MineTileTXSubmitted,
    txConfirmed: GameManagerEvent.MineTileTXConfirmed,
    cancelled: GameManagerEvent.MineTileCancelled,
    failed: GameManagerEvent.MineTileFailed,
  },
  [ActionType.UpgradeSettlement]: {
    scheduled: GameManagerEvent.UpgradeSettlementScheduled,
    started: GameManagerEvent.UpgradeSettlementStarted,
    txSubmitting: GameManagerEvent.UpgradeSettlementTXSubmitting,
    txSubmitted: GameManagerEvent.UpgradeSettlementTXSubmitted,
    txConfirmed: GameManagerEvent.UpgradeSettlementTXConfirmed,
    cancelled: GameManagerEvent.UpgradeSettlementCancelled,
    failed: GameManagerEvent.UpgradeSettlementFailed,
  },
  [ActionType.CreateSettlement]: {
    scheduled: GameManagerEvent.CreateSettlementScheduled,
    started: GameManagerEvent.CreateSettlementStarted,
    txSubmitting: GameManagerEvent.CreateSettlementTXSubmitting,
    txSubmitted: GameManagerEvent.CreateSettlementTXSubmitted,
    txConfirmed: GameManagerEvent.CreateSettlementTXConfirmed,
    cancelled: GameManagerEvent.CreateSettlementCancelled,
    failed: GameManagerEvent.CreateSettlementFailed,
  },
  [ActionType.DestroySettlement]: {
    scheduled: GameManagerEvent.DestroySettlementScheduled,
    started: GameManagerEvent.DestroySettlementStarted,
    txSubmitting: GameManagerEvent.DestroySettlementTXSubmitting,
    txSubmitted: GameManagerEvent.DestroySettlementTXSubmitted,
    txConfirmed: GameManagerEvent.DestroySettlementTXConfirmed,
    cancelled: GameManagerEvent.DestroySettlementCancelled,
    failed: GameManagerEvent.DestroySettlementFailed,
  },
  [ActionType.HarvestTiles]: {
    scheduled: GameManagerEvent.HarvestTilesScheduled,
    started: GameManagerEvent.HarvestTilesStarted,
    proofDone: GameManagerEvent.HarvestTilesProofDone,
    txSubmitting: GameManagerEvent.HarvestTilesTXSubmitting,
    txSubmitted: GameManagerEvent.HarvestTilesTXSubmitted,
    txConfirmed: GameManagerEvent.HarvestTilesTXConfirmed,
    cancelled: GameManagerEvent.HarvestTilesCancelled,
    failed: GameManagerEvent.HarvestTilesFailed,
  },
  [ActionType.SpawnCreature]: {
    scheduled: GameManagerEvent.SpawnCreatureScheduled,
    started: GameManagerEvent.SpawnCreatureStarted,
    txSubmitting: GameManagerEvent.SpawnCreatureTXSubmitting,
    txSubmitted: GameManagerEvent.SpawnCreatureTXSubmitted,
    txConfirmed: GameManagerEvent.SpawnCreatureTXConfirmed,
    cancelled: GameManagerEvent.SpawnCreatureCancelled,
    failed: GameManagerEvent.SpawnCreatureFailed,
  },
  [ActionType.WallTile]: {
    scheduled: GameManagerEvent.WallTileScheduled,
    started: GameManagerEvent.WallTileStarted,
    txSubmitted: GameManagerEvent.WallTileTXSubmitted,
    txSubmitting: GameManagerEvent.WallTileTXSubmitting,
    txConfirmed: GameManagerEvent.WallTileTXConfirmed,
    cancelled: GameManagerEvent.WallTileCancelled,
    failed: GameManagerEvent.WallTileFailed,
  },
  [ActionType.InitiateUnwallTile]: {
    scheduled: GameManagerEvent.UnwallTileScheduled,
    started: GameManagerEvent.UnwallTileStarted,
    proofDone: GameManagerEvent.UnwallTileProofDone,
    txSubmitted: GameManagerEvent.UnwallTileTXSubmitted,
    txSubmitting: GameManagerEvent.UnwallTileTXSubmitting,
    txConfirmed: GameManagerEvent.UnwallTileTXConfirmed,
    cancelled: GameManagerEvent.UnwallTileCancelled,
    failed: GameManagerEvent.UnwallTileFailed,
  },
  [ActionType.CompleteUnwallTile]: {
    scheduled: GameManagerEvent.UnwallTileScheduled,
    started: GameManagerEvent.UnwallTileStarted,
    proofDone: GameManagerEvent.UnwallTileProofDone,
    txSubmitted: GameManagerEvent.UnwallTileTXSubmitted,
    txSubmitting: GameManagerEvent.UnwallTileTXSubmitting,
    txConfirmed: GameManagerEvent.UnwallTileTXConfirmed,
    cancelled: GameManagerEvent.UnwallTileCancelled,
    failed: GameManagerEvent.UnwallTileFailed,
  },
  [ActionType.InitiateForceMineTile]: {
    scheduled: GameManagerEvent.ForceMineTileScheduled,
    started: GameManagerEvent.ForceMineTileStarted,
    proofDone: GameManagerEvent.ForceMineTileProofDone,
    txSubmitted: GameManagerEvent.ForceMineTileTXSubmitted,
    txSubmitting: GameManagerEvent.ForceMineTileTXSubmitting,
    txConfirmed: GameManagerEvent.ForceMineTileTXConfirmed,
    cancelled: GameManagerEvent.ForceMineTileCancelled,
    failed: GameManagerEvent.ForceMineTileFailed,
  },
  [ActionType.CompleteForceMineTile]: {
    scheduled: GameManagerEvent.ForceMineTileScheduled,
    started: GameManagerEvent.ForceMineTileProofDone,
    proofDone: GameManagerEvent.ForceMineTileProofDone,
    txSubmitted: GameManagerEvent.ForceMineTileTXSubmitted,
    txSubmitting: GameManagerEvent.ForceMineTileTXSubmitting,
    txConfirmed: GameManagerEvent.ForceMineTileTXConfirmed,
    cancelled: GameManagerEvent.ForceMineTileCancelled,
    failed: GameManagerEvent.ForceMineTileFailed,
  },
  [ActionType.UpgradeTile]: {
    scheduled: GameManagerEvent.UpgradeTileScheduled,
    started: GameManagerEvent.UpgradeTileStarted,
    txSubmitted: GameManagerEvent.UpgradeTileTXSubmitted,
    txSubmitting: GameManagerEvent.UpgradeTileTXSubmitting,
    txConfirmed: GameManagerEvent.UpgradeTileTXConfirmed,
    cancelled: GameManagerEvent.UpgradeTileCancelled,
    failed: GameManagerEvent.UpgradeTileFailed,
  },
  [ActionType.RemoveUpgrade]: {
    scheduled: GameManagerEvent.RemoveUpgradeScheduled,
    started: GameManagerEvent.RemoveUpgradeStarted,
    txSubmitted: GameManagerEvent.RemoveUpgradeTXSubmitted,
    txSubmitting: GameManagerEvent.RemoveUpgradeTXSubmitting,
    txConfirmed: GameManagerEvent.RemoveUpgradeTXConfirmed,
    cancelled: GameManagerEvent.RemoveUpgradeCancelled,
    failed: GameManagerEvent.RemoveUpgradeFailed,
  },
  [ActionType.RemoveWall]: {
    scheduled: GameManagerEvent.RemoveWallScheduled,
    started: GameManagerEvent.RemoveWallStarted,
    txSubmitted: GameManagerEvent.RemoveWallTXSubmitted,
    txSubmitting: GameManagerEvent.RemoveWallTXSubmitting,
    txConfirmed: GameManagerEvent.RemoveWallTXConfirmed,
    cancelled: GameManagerEvent.RemoveWallCancelled,
    failed: GameManagerEvent.RemoveWallFailed,
  },
  [ActionType.ClaimDungeonHeart]: {
    scheduled: GameManagerEvent.ClaimDungeonHeartScheduled,
    started: GameManagerEvent.ClaimDungeonHeartStarted,
    txSubmitted: GameManagerEvent.ClaimDungeonHeartTXSubmitted,
    txSubmitting: GameManagerEvent.ClaimDungeonHeartTXSubmitting,
    txConfirmed: GameManagerEvent.ClaimDungeonHeartTXSubmitted,
    cancelled: GameManagerEvent.ClaimDungeonHeartCancelled,
    failed: GameManagerEvent.ClaimDungeonHeartFailed,
  },
  [ActionType.ClaimResources]: {
    scheduled: GameManagerEvent.ClaimResourcesScheduled,
    started: GameManagerEvent.ClaimResourcesStarted,
    txSubmitted: GameManagerEvent.ClaimResourcesTXSubmitted,
    txSubmitting: GameManagerEvent.ClaimResourcesTXSubmitting,
    txConfirmed: GameManagerEvent.ClaimResourcesTXSubmitted,
    cancelled: GameManagerEvent.ClaimResourcesCancelled,
    failed: GameManagerEvent.ClaimResourcesFailed,
  },
  [ActionType.MoveCreatures]: {
    scheduled: GameManagerEvent.MoveCreaturesScheduled,
    started: GameManagerEvent.MoveCreaturesStarted,
    proofDone: GameManagerEvent.MoveCreaturesProofDone,
    txSubmitting: GameManagerEvent.MoveCreaturesTXSubmitting,
    txSubmitted: GameManagerEvent.MoveCreaturesTXSubmitted,
    txConfirmed: GameManagerEvent.MoveCreaturesTXConfirmed,
    cancelled: GameManagerEvent.MoveCreaturesCancelled,
    failed: GameManagerEvent.MoveCreaturesFailed,
  },
};
